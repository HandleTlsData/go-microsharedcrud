// Code generated by go-swagger; DO NOT EDIT.

package entity

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"sharedcrud/models"
)

// EntityHandlerOKCode is the HTTP code returned for type EntityHandlerOK
const EntityHandlerOKCode int = 200

/*EntityHandlerOK successful operation

swagger:response entityHandlerOK
*/
type EntityHandlerOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Entity `json:"body,omitempty"`
}

// NewEntityHandlerOK creates EntityHandlerOK with default headers values
func NewEntityHandlerOK() *EntityHandlerOK {

	return &EntityHandlerOK{}
}

// WithPayload adds the payload to the entity handler o k response
func (o *EntityHandlerOK) WithPayload(payload []*models.Entity) *EntityHandlerOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the entity handler o k response
func (o *EntityHandlerOK) SetPayload(payload []*models.Entity) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *EntityHandlerOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Entity, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// EntityHandlerNotFoundCode is the HTTP code returned for type EntityHandlerNotFound
const EntityHandlerNotFoundCode int = 404

/*EntityHandlerNotFound No entity was found

swagger:response entityHandlerNotFound
*/
type EntityHandlerNotFound struct {
}

// NewEntityHandlerNotFound creates EntityHandlerNotFound with default headers values
func NewEntityHandlerNotFound() *EntityHandlerNotFound {

	return &EntityHandlerNotFound{}
}

// WriteResponse to the client
func (o *EntityHandlerNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}

// Code generated by go-swagger; DO NOT EDIT.

package entity

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// EntityDeleteReader is a Reader for the EntityDelete structure.
type EntityDeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *EntityDeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewEntityDeleteOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewEntityDeleteNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewEntityDeleteOK creates a EntityDeleteOK with default headers values
func NewEntityDeleteOK() *EntityDeleteOK {
	return &EntityDeleteOK{}
}

/* EntityDeleteOK describes a response with status code 200, with default header values.

OK
*/
type EntityDeleteOK struct {
}

func (o *EntityDeleteOK) Error() string {
	return fmt.Sprintf("[DELETE /entity/{entityName}][%d] entityDeleteOK ", 200)
}

func (o *EntityDeleteOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewEntityDeleteNotFound creates a EntityDeleteNotFound with default headers values
func NewEntityDeleteNotFound() *EntityDeleteNotFound {
	return &EntityDeleteNotFound{}
}

/* EntityDeleteNotFound describes a response with status code 404, with default header values.

No entity was found
*/
type EntityDeleteNotFound struct {
}

func (o *EntityDeleteNotFound) Error() string {
	return fmt.Sprintf("[DELETE /entity/{entityName}][%d] entityDeleteNotFound ", 404)
}

func (o *EntityDeleteNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
